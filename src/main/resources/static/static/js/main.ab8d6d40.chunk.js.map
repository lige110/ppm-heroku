{"version":3,"sources":["actions/types.tsx","reducers/backlogReducer.tsx","reducers/errorReducer.tsx","reducers/projectReducer.tsx","reducers/securityReducer.tsx","reducers/index.tsx","store.tsx","securityUtils/setToken.tsx","components/Project/CreateProjectButton.tsx","actions/projectActions.tsx","components/Project/ProjectItem.tsx","components/Dashborad.tsx","components/Layout/Header.tsx","actions/securityActions.tsx","components/Project/AddProject.tsx","components/Project/UpdateProject.tsx","components/ProjectBoard/ProjectTasks/ProjectTaskItem.tsx","actions/backlogActions.tsx","components/ProjectBoard/Backlog.tsx","components/ProjectBoard/ProjectBoard.tsx","components/ProjectBoard/ProjectTasks/AddProjectTask.tsx","components/ProjectBoard/ProjectTasks/UpdateProjectTask.tsx","components/Layout/Landing.tsx","components/UserManagement/Register.tsx","components/UserManagement/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GET_ERRORS","RESET_ERRORS","GET_ALLPROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","initialState","projectTasks","projectTask","backlogReducer","state","action","type","payload","filter","projectSequence","errorReducer","projectList","project","projectReducer","projectIdentifier","user","validToken","securityReducer","combineReducers","errors","projects","backlog","security","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","setToken","token","axios","defaults","headers","common","CreateProjectButton","Fragment","to","className","createProject","history","dispatch","a","post","push","response","data","ProjectItem","id","this","props","deleteProject","projectName","description","onClick","onDeleteClick","bind","React","Component","connect","delete","Dashborad","getProjects","map","get","console","error","Header","logout","location","href","headerLinks","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","localStorage","removeItem","AddProject","start_date","end_date","onChange","onSubmit","nextProps","setState","e","key","target","name","value","preventDefault","newProject","classnames","placeholder","UpdateProject","undefined","match","params","getProjectById","updateProject","disabled","res","ProjectTaskItem","deleteProjectTask","priorityString","priorityClass","backlog_id","PT_sequence","priority","summary","acceptanceCriteria","PT_SQ","confirm","Backlog","todoTasks","status","inprogressTasks","finishedTasks","ProjectBoard","getBacklog","BoardContent","project_tasks","length","projectNotFound","role","boardAlgorithm","results","AddProjectTask","dueDate","newProjectTask","addProjectTask","classNames","UpdateProjectTask","getProjectTask","updatedProjectTask","updateProjectTask","result","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","JWT","jwtToken","decoded_Token","currentTime","Date","now","exp","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAAaA,EAAa,aACbC,EAAe,eAEfC,EAAkB,kBAClBC,EAAc,cACdC,EAAiB,iBAEjBC,EAAc,cACdC,EAAmB,mBACnBC,EAAsB,sBAEtBC,EAAmB,mBCH1BC,EAAe,CACnBC,aAAc,GACdC,YAAa,IA+BAC,EA5BQ,WAA8C,IAA7CC,EAA4C,uDAApCJ,EAAcK,EAAsB,uCAClE,OAAQA,EAAOC,MACb,KAAKV,EACH,OAAO,2BACFQ,GADL,IAEEH,aAAcI,EAAOE,UAGzB,KAAKV,EACH,OAAO,2BACFO,GADL,IAEEF,YAAaG,EAAOE,UAGxB,KAAKT,EACH,OAAO,2BACFM,GADL,IAEEH,aAAcG,EAAMH,aAAaO,QAC/B,SAACN,GAAD,OACEA,EAAYO,kBAAoBJ,EAAOE,aAI/C,QACE,OAAOH,IClCPJ,EAAe,GAeNU,EAbM,WAA8C,IAA7CN,EAA4C,uDAApCJ,EAAcK,EAAsB,uCAChE,OAAQA,EAAOC,MACb,KAAKf,EAGL,KAAKC,EACH,OAAOa,EAAOE,QAEhB,QACE,OAAOH,ICLPJ,EAA6B,CACjCW,YAAa,GACbC,QAAS,IAsBIC,EAnBQ,WAA8C,IAA7CT,EAA4C,uDAApCJ,EAAcK,EAAsB,uCAClE,OAAQA,EAAOC,MACb,KAAKZ,EACH,OAAO,2BAAKU,GAAZ,IAAmBQ,QAASP,EAAOE,UACrC,KAAKd,EAEH,OAAO,2BAAKW,GAAZ,IAAmBO,YAAaN,EAAOE,UACzC,KAAKZ,EACH,OAAO,2BACFS,GADL,IAEEO,YAAaP,EAAMO,YAAYH,QAC7B,SAACI,GAAD,OAAaA,EAAQE,oBAAsBT,EAAOE,aAGxD,QACE,OAAOH,ICrBPJ,EAA8B,CAClCe,KAAM,GACNC,YAAY,GAoBCC,EAjBS,WAGlB,IAFJb,EAEG,uDAFoBJ,EACvBK,EACG,uCACH,OAAQA,EAAOC,MACb,KAAKP,EACH,OAAO,2BACFK,GADL,IAEEY,YAAY,EACZD,KAAMV,EAAOE,UAGjB,QACE,OAAOH,ICpBEc,cAAgB,CAC7BC,OAAQT,EACRU,SAAUP,EACVQ,QAASlB,EACTmB,SAAUL,ICLNjB,EAAe,GACfuB,EAAa,CAACC,KAIdC,EAAsBC,OAAeC,6BACtCD,OAAeC,+BAChB,aAyBWC,EAvBXF,OAAOG,UAAUC,UAAUC,SAAS,WAAaN,EAC3CO,YACNC,EACAjC,EACAkC,YAAQC,IAAe,WAAf,EAAmBZ,GAAaE,IAQlCO,YACNC,EACAjC,EACAkC,YACEC,IAAe,WAAf,EAAmBZ,GAClBG,OAAeC,8BACbD,OAAeC,iC,yBCtBTS,EARE,SAACC,GACZA,EACFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAE1CC,IAAMC,SAASC,QAAQC,OAAvB,eCOIC,EAVa,WAC1B,OACE,cAAC,IAAMC,SAAP,UACE,cAAC,IAAD,CAAMC,GAAG,cAAcC,UAAU,sBAAjC,iC,wBCIOC,EACX,SAAClC,EAAkBmC,GAAnB,8CACA,WAEEC,GAFF,SAAAC,EAAA,+EAKUX,IAAMY,KAAK,eAAgBtC,GALrC,OAOImC,EAAQI,KAAK,cACbH,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAVf,gDAaIyC,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAAI6C,SAASC,OAf5B,yDADA,uDCAIC,E,4KACUC,GACZC,KAAKC,MAAMC,cAAcH,K,+BAGzB,IAAM3C,EAAmB4C,KAAKC,MAAM7C,QACpC,OACE,qBAAKiC,UAAU,YAAf,SACE,qBAAKA,UAAU,+BAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,sBAAMA,UAAU,UAAhB,SAA2BjC,EAAQE,sBAErC,sBAAK+B,UAAU,0BAAf,UACE,6BAAKjC,EAAQ+C,cACb,4BAAI/C,EAAQgD,iBAEd,qBAAKf,UAAU,6BAAf,SACE,qBAAIA,UAAU,aAAd,UACE,cAAC,IAAD,CAAMD,GAAE,wBAAmBhC,EAAQE,mBAAnC,SACE,oBAAI+B,UAAU,wBAAd,SACE,mBAAGA,UAAU,4BAAb,iCAGJ,cAAC,IAAD,CAAMD,GAAE,yBAAoBhC,EAAQE,mBAApC,SACE,oBAAI+B,UAAU,yBAAd,SACE,mBAAGA,UAAU,kBAAb,sCAIJ,oBACEA,UAAU,yBACVgB,QAASL,KAAKM,cAAcC,KAC1BP,KACA5C,EAAQE,mBAJZ,SAOE,mBAAG+B,UAAU,0BAAb,+C,GArCQmB,IAAMC,WAgDjBC,cAAQ,KAAM,CAAER,cDSF,SAACH,GAAD,8CAAgB,WAAOP,GAAP,SAAAC,EAAA,sEACrCX,IAAM6B,OAAN,uBAA6BZ,IADQ,OAE3CP,EAAS,CACP1C,KAAMX,EACNY,QAASgD,IAJgC,2CAAhB,wDCTdW,CAAiCZ,GCpD1Cc,E,gOAOFZ,KAAKC,MAAMY,YAAYb,KAAKC,MAAMV,W,+BAKlC,IAAM3B,EAAWoC,KAAKC,MAAMrC,SAAST,YAGrC,OACE,qBAAKkC,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,wBAAd,sBACA,uBACA,cAAC,EAAD,IACA,uBACA,uBACCzB,EAASkD,KAAI,SAAC1D,GAAD,OACZ,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQ2C,oB,GA1BlBS,IAAMC,WAwCfC,eAJS,SAAC9D,GAAD,MAAiB,CACvCgB,SAAUhB,EAAMgB,YAGsB,CAAEiD,YFff,SAACtB,GAAD,8CAAuB,WAAOC,GAAP,eAAAC,EAAA,+EAGlBX,IAAMiC,IAAI,oBAHQ,OAGxCnD,EAHwC,OAI9C4B,EAAS,CACP1C,KAAMb,EACNc,QAASa,EAASiC,OAEpBL,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAEXwC,EAAQI,KAAK,cAZiC,gDAc9CqB,QAAQC,MAAR,MAd8C,yDAAvB,wDEeZP,CAA0CE,G,QCtCnDM,G,kDACJ,WAAYjB,GAAa,IAAD,8BACtB,cAAMA,IAEDkB,OAAS,EAAKA,OAAOZ,KAAZ,gBACd,EAAK3D,MAAQ,CACXkB,SAAU,IALU,E,qDAUtBkC,KAAKC,MAAMkB,SACXjD,OAAOkD,SAASC,KAAO,M,+BAGf,IA8CJC,EA9CG,EACsBtB,KAAKC,MAAMnC,SAAhCN,EADD,EACCA,WAAYD,EADb,EACaA,KAEdgE,EACJ,sBAAKlC,UAAU,2BAA2BU,GAAG,aAA7C,UACE,oBAAIV,UAAU,qBAAd,SACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWD,GAAG,aAA9B,2BAMJ,qBAAIC,UAAU,qBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWD,GAAG,aAA9B,UACE,mBAAGC,UAAU,4BACZ9B,EAAKiE,cAGV,oBAAInC,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWD,GAAG,UAAUiB,QAASL,KAAKmB,OAAtD,4BAQFM,EACJ,qBAAKpC,UAAU,2BAA2BU,GAAG,aAA7C,SACE,qBAAIV,UAAU,qBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWD,GAAG,YAA9B,uBAIF,oBAAIC,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWD,GAAG,SAA9B,0BAgBR,OALEkC,EADE9D,GAAcD,EACFgE,EAEAE,EAId,qBAAKpC,UAAU,sDAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,eAAvB,8CAGA,wBACEA,UAAU,iBACVvC,KAAK,SACL4E,cAAY,WACZC,cAAY,cAJd,SAME,sBAAMtC,UAAU,0BAEjBiC,W,GAnFUd,IAAMC,WA8FZC,gBAJS,SAAC9D,GAAD,MAAiB,CACvCkB,SAAUlB,EAAMkB,YAGsB,CAAEqD,OCxDpB,yDAAM,WAAO3B,GAAP,SAAAC,EAAA,sDAC1BmC,aAAaC,WAAW,YACxBjD,GAAS,GACTY,EAAS,CACP1C,KAAMP,EACNQ,QAAS,KALe,2CAAN,wDDwDP2D,CAAqCQ,I,6BExF9CY,G,kDACJ,WAAY7B,GAAa,IAAD,8BACtB,cAAMA,IAEDrD,MAAQ,CACXuD,YAAa,GACb7C,kBAAmB,GACnB8C,YAAa,GACb2B,WAAY,GACZC,SAAU,GACVrE,OAAQ,IAEV,EAAKsE,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAK2B,SAAW,EAAKA,SAAS3B,KAAd,gBAZM,E,sEAgBE4B,GACpBA,EAAUxE,QACZqC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,IAA+Be,OAAQwE,EAAUxE,Y,+BAI5C0E,GACP,IAAMC,EAAMD,EAAEE,OAAOC,KACfC,EAAQJ,EAAEE,OAAOE,MAEvBzC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,mBAAgC0F,EAAMG,O,+BAG/BJ,GACPA,EAAEK,iBAEF,IAAMC,EAAsB,CAC1BxC,YAAaH,KAAKpD,MAAMuD,YACxB7C,kBAAmB0C,KAAKpD,MAAMU,kBAC9B8C,YAAaJ,KAAKpD,MAAMwD,YACxB2B,WAAY/B,KAAKpD,MAAMmF,WACvBC,SAAUhC,KAAKpD,MAAMoF,UAGvBhC,KAAKC,MAAMX,cAAcqD,EAAY3C,KAAKC,MAAMV,W,+BAGxC,IACA5B,EAAWqC,KAAKpD,MAAhBe,OAER,OACE,qBAAK0B,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,wBAAd,iCACA,uBACA,uBAAM6C,SAAUlC,KAAKkC,SAArB,UACE,sBAAK7C,UAAU,aAAf,UACE,uBACEvC,KAAK,OACLuC,UAAWuD,KAAW,+BAAgC,CACpD,aAAcjF,EAAOwC,cAEvB0C,YAAY,eACZL,KAAK,cACLC,MAAOzC,KAAKpD,MAAMuD,YAClB8B,SAAUjC,KAAKiC,WAEhBtE,EAAOwC,aACN,qBAAKd,UAAU,mBAAf,SAAmC1B,EAAOwC,iBAG9C,sBAAKd,UAAU,aAAf,UACE,uBACEvC,KAAK,OACLuC,UAAWuD,KAAW,+BAAgC,CACpD,aAAcjF,EAAOL,oBAEvBuF,YAAY,oBACZL,KAAK,oBACLC,MAAOzC,KAAKpD,MAAMU,kBAClB2E,SAAUjC,KAAKiC,WAEhBtE,EAAOL,mBACN,qBAAK+B,UAAU,mBAAf,SACG1B,EAAOL,uBAId,sBAAK+B,UAAU,aAAf,UACE,0BACEA,UAAWuD,KAAW,+BAAgC,CACpD,aAAcjF,EAAOyC,cAEvByC,YAAY,sBACZL,KAAK,cACLC,MAAOzC,KAAKpD,MAAMwD,YAClB6B,SAAUjC,KAAKiC,WAEhBtE,EAAOyC,aACN,qBAAKf,UAAU,mBAAf,SAAmC1B,EAAOyC,iBAG9C,4CACA,qBAAKf,UAAU,aAAf,SACE,uBACEvC,KAAK,OACLuC,UAAU,+BACVmD,KAAK,aACLC,MAAOzC,KAAKpD,MAAMmF,WAClBE,SAAUjC,KAAKiC,aAGnB,oDACA,qBAAK5C,UAAU,aAAf,SACE,uBACEvC,KAAK,OACLuC,UAAU,+BACVmD,KAAK,WACLC,MAAOzC,KAAKpD,MAAMoF,SAClBC,SAAUjC,KAAKiC,aAInB,uBACEnF,KAAK,SACLuC,UAAU,mD,GA5HHmB,IAAMC,WAgJhBC,gBAJS,SAAC9D,GAAD,MAAiB,CACvCe,OAAQf,EAAMe,UAGwB,CAAE2B,iBAA3BoB,CAA4CoB,IC/IrDgB,G,kDAEJ,WAAY7C,GAAa,IAAD,8BACtB,cAAMA,IAEDrD,MAAQ,CACXmD,QAAIgD,EACJ5C,YAAa,GACb7C,kBAAmB,GACnB8C,YAAa,GACb2B,WAAY,GACZC,SAAU,GACVrE,OAAQ,IAGV,EAAKuE,SAAW,EAAKA,SAAS3B,KAAd,gBAChB,EAAK0B,SAAW,EAAKA,SAAS1B,KAAd,gBAdM,E,sEAiBE4B,GACpBA,EAAUxE,QACZqC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,IAA+Be,OAAQwE,EAAUxE,UAFX,MAYpCwE,EAAU/E,QANZ2C,EANsC,EAMtCA,GACAI,EAPsC,EAOtCA,YACA7C,EARsC,EAQtCA,kBACA8C,EATsC,EAStCA,YACA2B,EAVsC,EAUtCA,WACAC,EAXsC,EAWtCA,SAGFhC,KAAKoC,SAAS,CACZrC,KACAI,cACA7C,oBACA8C,cACA2B,aACAC,e,0CAKF,IAAMjC,EAAKC,KAAKC,MAAM+C,MAAMC,OAAOlD,GACnCC,KAAKC,MAAMiD,eAAenD,EAAIC,KAAKC,MAAMV,W,+BAKzC8C,GAEA,IAAMC,EAAMD,EAAEE,OAAOC,KACfC,EAAQJ,EAAEE,OAAOE,MAEvBzC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,mBAAgC0F,EAAMG,O,+BAG/BJ,GACPA,EAAEK,iBAEF,IAAMS,EAAgB,CACpBpD,GAAIC,KAAKpD,MAAMmD,GACfI,YAAaH,KAAKpD,MAAMuD,YACxB7C,kBAAmB0C,KAAKpD,MAAMU,kBAC9B8C,YAAaJ,KAAKpD,MAAMwD,YACxB2B,WAAY/B,KAAKpD,MAAMmF,WACvBC,SAAUhC,KAAKpD,MAAMoF,UAIvBhC,KAAKC,MAAMX,cAAc6D,EAAenD,KAAKC,MAAMV,W,+BAG3C,IACA5B,EAAWqC,KAAKpD,MAAhBe,OACR,OACE,qBAAK0B,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,wBAAd,iCACA,uBACA,uBAAM6C,SAAUlC,KAAKkC,SAArB,UACE,sBAAK7C,UAAU,aAAf,UACE,uBACEvC,KAAK,OACLuC,UAAWuD,KAAW,+BAAgC,CACpD,aAAcjF,EAAOwC,cAEvB0C,YAAY,eACZL,KAAK,cACLC,MAAOzC,KAAKpD,MAAMuD,YAClB8B,SAAUjC,KAAKiC,WAEhBtE,EAAOwC,aACN,qBAAKd,UAAU,mBAAf,SAAmC1B,EAAOwC,iBAG9C,qBAAKd,UAAU,aAAf,SACE,uBACEvC,KAAK,OACLuC,UAAU,+BACVwD,YAAY,oBACZJ,MAAOzC,KAAKpD,MAAMU,kBAClB8F,UAAQ,MAGZ,sBAAK/D,UAAU,aAAf,UACE,0BACEA,UAAWuD,KAAW,+BAAgC,CACpD,aAAcjF,EAAOyC,cAEvByC,YAAY,sBACZL,KAAK,cACLC,MAAOzC,KAAKpD,MAAMwD,YAClB6B,SAAUjC,KAAKiC,WAEhBtE,EAAOyC,aACN,qBAAKf,UAAU,mBAAf,SAAmC1B,EAAOyC,iBAG9C,4CACA,qBAAKf,UAAU,aAAf,SACE,uBACEvC,KAAK,OACLuC,UAAU,+BACVmD,KAAK,aACLC,MAAOzC,KAAKpD,MAAMmF,WAClBE,SAAUjC,KAAKiC,aAGnB,oDACA,qBAAK5C,UAAU,aAAf,SACE,uBACEvC,KAAK,OACLuC,UAAU,+BACVmD,KAAK,WACLC,MAAOzC,KAAKpD,MAAMoF,SAClBC,SAAUjC,KAAKiC,aAInB,uBACEnF,KAAK,SACLuC,UAAU,mD,GAjJAmB,IAAMC,WAkKnBC,gBANS,SAAC9D,GAAD,MAAiB,CAEvCQ,QAASR,EAAMgB,SAASR,QACxBO,OAAQf,EAAMe,UAGwB,CAAEuF,eN/HxC,SAACnD,EAAYR,GAAb,8CAAmC,WAAOC,GAAP,eAAAC,EAAA,+EAGRX,IAAMiC,IAAN,uBAA0BhB,IAHlB,OAGzBsD,EAHyB,OAI/B7D,EAAS,CACP1C,KAAMZ,EACNa,QAASsG,EAAIxD,OANgB,gDAS/BN,EAAQI,KAAK,cACbH,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAAI6C,SAASC,OAZO,yDAAnC,uDM+HwDP,iBAA3CoB,CACboC,ICxKIQ,G,kDACJ,WAAYrD,GAA2B,IAAD,8BACpC,cAAMA,IAEDK,cAAgB,EAAKA,cAAcC,KAAnB,gBAHe,E,0DAMxB8B,GACZrC,KAAKC,MAAMsD,kBACTvD,KAAKC,MAAMvD,YAAYY,kBACvB0C,KAAKC,MAAMvD,YAAYO,mB,+BAIjB,IAMJuG,EACAC,EANI/G,EAAgBsD,KAAKC,MAArBvD,YACFgH,EAAqB1D,KAAKC,MAAMvD,YAAYY,kBAC5CqG,EAAkC3D,KAAKC,MAAMvD,YAChDO,gBAkBH,OAb6B,IAAzBP,EAAYkH,WACdH,EAAgB,uBAChBD,EAAiB,QAEU,IAAzB9G,EAAYkH,WACdH,EAAgB,wBAChBD,EAAiB,UAEU,IAAzB9G,EAAYkH,WACdH,EAAgB,qBAChBD,EAAiB,OAIjB,sBAAKnE,UAAU,qBAAf,UACE,sBAAKA,UAAS,mCAA8BoE,GAA5C,iBACO/G,EAAYO,gBADnB,iBACkDuG,KAElD,sBAAKnE,UAAU,qBAAf,UACE,qBAAIA,UAAU,aAAd,cAA6B3C,EAAYmH,WACzC,mBAAGxE,UAAU,2BAAb,SACG3C,EAAYoH,qBAEf,cAAC,IAAD,CACE1E,GAAE,6BAAwBsE,EAAxB,YAAsCC,GACxCtE,UAAU,kBAFZ,2BAOA,wBAAQA,UAAU,sBAAsBgB,QAASL,KAAKM,cAAtD,8B,GArDoBE,IAAMC,WA8DrBC,eAAQ,KAAM,CAAE6C,kBCyBE,SAACG,EAAoBK,GAArB,8CAAuC,WACtEvE,GADsE,SAAAC,EAAA,0DAGlEvB,OAAO8F,QAAP,wCAAgDD,EAAhD,OAHkE,gCAI9DjF,IAAM6B,OAAN,uBAA6B+C,EAA7B,YAA2CK,IAJmB,OAMpEvE,EAAS,CACP1C,KAAMR,EACNS,QAASgH,IARyD,2CAAvC,wDDzBlBrD,CAAqC4C,IEQrCW,G,uKAvEH,IACAxH,EAAiBuD,KAAKC,MAAtBxD,aAGFyH,EAAYzH,EAAaO,QAC7B,SAACN,GAAD,MAAqD,UAAvBA,EAAYyH,UAEtCC,EAAkB3H,EAAaO,QACnC,SAACN,GAAD,MAAqD,gBAAvBA,EAAYyH,UAEtCE,EAAgB5H,EAAaO,QACjC,SAACN,GAAD,MAAqD,SAAvBA,EAAYyH,UAG5C,OACE,qBAAK9E,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,sCAAf,SACE,2CAKH6E,EAAUpD,KAAI,SAACpE,GAAD,OACb,cAAC,GAAD,CAEEA,YAAaA,GADRA,EAAYO,uBAMvB,sBAAKoC,UAAU,WAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,iDAKH+E,EAAgBtD,KAAI,SAACpE,GAAD,OACnB,cAAC,GAAD,CAEEA,YAAaA,GADRA,EAAYO,uBAMvB,sBAAKoC,UAAU,WAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,0CAKHgF,EAAcvD,KAAI,SAACpE,GAAD,OACjB,cAAC,GAAD,CAEEA,YAAaA,GADRA,EAAYO,gC,GA5DXuD,IAAMC,WCFtB6D,G,kDACJ,WAAYrE,GAAa,IAAD,8BACtB,cAAMA,IACDrD,MAAQ,CACXe,OAAQ,IAHY,E,gEAMH,IACXoC,EAAOC,KAAKC,MAAM+C,MAAMC,OAAxBlD,GACRC,KAAKC,MAAMsE,WAAWxE,EAAIC,KAAKC,MAAMV,W,uDAGN4C,GAC3BA,EAAUxE,QACZqC,KAAKoC,SAAS,CAAEzE,OAAQwE,EAAUxE,W,+BAI5B,IAKJ6G,EAJIzE,EAAOC,KAAKC,MAAM+C,MAAMC,OAAxBlD,GACFtD,EAAeuD,KAAKC,MAAMpC,QAAQpB,aA0BxC,OADA+H,EApBuB,SAAC7G,EAAa8G,GACnC,OAAIA,EAAcC,OAAS,EACrB/G,EAAOgH,gBAEP,qBAAKtF,UAAU,iCAAiCuF,KAAK,QAArD,SACGjH,EAAOgH,kBAKV,qBAAKtF,UAAU,+BAA+BuF,KAAK,QAAnD,4CAMG,cAAC,GAAD,CAASnI,aAAcA,IAInBoI,CAxBI7E,KAAKpD,MAAhBe,OAwB8BlB,GAEpC,8BACE,sBAAK4C,UAAU,YAAf,UACE,cAAC,IAAD,CAAMD,GAAE,0BAAqBW,GAAMV,UAAU,uBAA7C,SACE,mBAAGA,UAAU,qBAAb,oCAEF,uBACA,uBACCmF,W,GAtDgBhE,IAAMC,WAkElBC,gBALS,SAAC9D,GAAD,MAAiB,CACvCiB,QAASjB,EAAMiB,QACfF,OAAQf,EAAMe,UAGwB,CAAE4G,WF3ChB,SAACb,EAAoBnE,GAArB,8CAA2C,WACnEC,GADmE,eAAAC,EAAA,+EAItCX,IAAMiC,IAAN,uBAA0B2C,IAJY,OAI3DoB,EAJ2D,OAMjEtF,EAAS,CACP1C,KAAMV,EACNW,QAAS+H,EAAQjF,OAEnBL,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAZsD,gDAejEyC,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAAM6C,SAASC,OAjBuC,yDAA3C,wDE2CXa,CAAyC4D,IC9DlDS,G,kDACJ,WAAY9E,GAAa,IAAD,0BAEdF,GADR,cAAME,IACcA,MAAM+C,MAAMC,OAAxBlD,GAFc,OAItB,EAAKnD,MAAQ,CACXiH,QAAS,GACTM,OAAQ,GACRL,mBAAoB,GACpBF,SAAU,EACVoB,QAAS,GACT1H,kBAAmByC,EACnBpC,OAAQ,IAGV,EAAKsE,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAK2B,SAAW,EAAKA,SAAS3B,KAAd,gBAfM,E,sEAkBE4B,GACpBA,EAAUxE,QACZqC,KAAKoC,SAAS,CAAEzE,OAAQwE,EAAUxE,W,+BAMpC0E,GAEA,IAAMC,EAAcD,EAAEE,OAAOC,KACvBC,EAAgBJ,EAAEE,OAAOE,MAE/BzC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,mBAAgC0F,EAAMG,O,+BAI/BJ,GACPA,EAAEK,iBAGF,IAAMuC,EAA8B,CAClCpB,QAAS7D,KAAKpD,MAAMiH,QACpBM,OAAQnE,KAAKpD,MAAMuH,OACnBL,mBAAoB9D,KAAKpD,MAAMkH,mBAC/BF,SAAU5D,KAAKpD,MAAMgH,SACrBoB,QAAShF,KAAKpD,MAAMoI,QACpB1H,kBAAmB0C,KAAKpD,MAAMU,mBAKhC0C,KAAKC,MAAMiF,eACTlF,KAAKpD,MAAMU,kBACX2H,EACAjF,KAAKC,MAAMV,W,+BAIL,IACAQ,EAAOC,KAAKC,MAAM+C,MAAMC,OAAxBlD,GACApC,EAAWqC,KAAKpD,MAAhBe,OAER,OACE,qBAAK0B,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMD,GAAE,wBAAmBW,GAAMV,UAAU,gBAA3C,mCAGA,oBAAIA,UAAU,wBAAd,8BACA,mBAAGA,UAAU,mBAAb,yCACA,uBAAM6C,SAAUlC,KAAKkC,SAArB,UACE,sBAAK7C,UAAU,aAAf,UACE,uBACEvC,KAAK,OACLuC,UAAW8F,KAAW,+BAAgC,CACpD,aAAcxH,EAAOkG,UAEvBrB,KAAK,UACLK,YAAY,uBACZJ,MAAOzC,KAAKpD,MAAMiH,QAClB5B,SAAUjC,KAAKiC,WAEhBtE,EAAOkG,SACN,qBAAKxE,UAAU,mBAAf,SAAmC1B,EAAOkG,aAG9C,qBAAKxE,UAAU,aAAf,SACE,0BACEA,UAAU,+BACVwD,YAAY,sBACZL,KAAK,qBACLC,MAAOzC,KAAKpD,MAAMkH,mBAClB7B,SAAUjC,KAAKiC,aAGnB,0CACA,qBAAK5C,UAAU,aAAf,SACE,uBACEvC,KAAK,OACLuC,UAAU,+BACVmD,KAAK,UACLC,MAAOzC,KAAKpD,MAAMoI,QAClB/C,SAAUjC,KAAKiC,aAGnB,qBAAK5C,UAAU,aAAf,SACE,yBACEA,UAAU,+BACVmD,KAAK,WACLC,MAAOzC,KAAKpD,MAAMgH,SAClB3B,SAAUjC,KAAKiC,SAJjB,UAME,wBAAQQ,MAAO,EAAf,6BACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,sBAIJ,qBAAKpD,UAAU,aAAf,SACE,yBACEA,UAAU,+BACVmD,KAAK,SACLC,MAAOzC,KAAKpD,MAAMuH,OAClBlC,SAAUjC,KAAKiC,SAJjB,UAME,wBAAQQ,MAAM,GAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,uBAIJ,uBACE3F,KAAK,SACLuC,UAAU,mD,GAzICmB,IAAMC,WAwJpBC,gBAJS,SAAC9D,GAAD,MAAiB,CACvCe,OAAQf,EAAMe,UAGwB,CAAEuH,eHzJZ,SAC5BxB,EACAhH,EACA6C,GAH4B,8CAIzB,WAAOC,GAAP,SAAAC,EAAA,+EAEKX,IAAMY,KAAN,uBAA2BgE,GAAchH,GAF9C,OAGD6C,EAAQI,KAAR,wBAA8B+D,IAC9BlE,EAAS,CACP1C,KAAMd,EACNe,QAAS,KANV,gDASDyC,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAAI6C,SAASC,OAXvB,yDAJyB,wDGyJfa,CAA6CqE,ICrJtDK,G,kDACJ,WAAYnF,GAAa,IAAD,8BACtB,cAAMA,IAEDiC,SAAW,EAAKA,SAAS3B,KAAd,gBAChB,EAAK0B,SAAW,EAAKA,SAAS1B,KAAd,gBAEhB,EAAK3D,MAAQ,CACXmD,QAAIgD,EACJc,QAAS,GACTM,OAAQ,GACRL,mBAAoB,GACpBF,SAAU,EACVoB,QAAS,GACT1H,kBAAmB,GACnBL,gBAAiB,GACjBU,OAAQ,IAfY,E,6EAmBSwE,GAC3BA,EAAUxE,QACZqC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,IAA+Be,OAAQwE,EAAUxE,UAFJ,MAc3CwE,EAAUzF,YARZqD,EAN6C,EAM7CA,GACA8D,EAP6C,EAO7CA,QACAM,EAR6C,EAQ7CA,OACAL,EAT6C,EAS7CA,mBACAF,EAV6C,EAU7CA,SACAoB,EAX6C,EAW7CA,QACA1H,EAZ6C,EAY7CA,kBACAL,EAb6C,EAa7CA,gBAGF+C,KAAKoC,SAAS,CACZrC,KACA8D,UACAM,SACAL,qBACAF,WACAoB,UACA1H,oBACAL,sB,0CAIiB,IAAD,EACY+C,KAAKC,MAAM+C,MAAMC,OAAvCS,EADU,EACVA,WAAYK,EADF,EACEA,MACpB/D,KAAKC,MAAMoF,eAAe3B,EAAYK,EAAO/D,KAAKC,MAAMV,W,+BAG1C8C,GACdA,EAAEK,iBAEF,IAAM4C,EAAkC,CACtCvF,GAAIC,KAAKpD,MAAMmD,GACf8D,QAAS7D,KAAKpD,MAAMiH,QACpBM,OAAQnE,KAAKpD,MAAMuH,OACnBL,mBAAoB9D,KAAKpD,MAAMkH,mBAC/BF,SAAU5D,KAAKpD,MAAMgH,SACrBoB,QAAShF,KAAKpD,MAAMoI,QACpB1H,kBAAmB0C,KAAKpD,MAAMU,kBAC9BL,gBAAiB+C,KAAKpD,MAAMK,iBAK9B+C,KAAKC,MAAMsF,kBACTvF,KAAKpD,MAAMU,kBACX0C,KAAKpD,MAAMK,gBACXqI,EACAtF,KAAKC,MAAMV,W,+BAKb8C,GAEA,IAAMC,EAAcD,EAAEE,OAAOC,KACvBC,EAAgBJ,EAAEE,OAAOE,MAE/BzC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,mBAAgC0F,EAAMG,O,+BAG9B,IACAiB,EAAe1D,KAAKC,MAAM+C,MAAMC,OAAhCS,WACF/F,EAASqC,KAAKpD,MAAMe,OAC1B,OACE,qBAAK0B,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CACED,GAAE,wBAAmBsE,GACrBrE,UAAU,gBAFZ,mCAMA,oBAAIA,UAAU,wBAAd,8BACA,oBAAGA,UAAU,mBAAb,wBACcW,KAAKpD,MAAMU,kBADzB,qBAEG0C,KAAKpD,MAAMK,mBAEd,uBAAMiF,SAAUlC,KAAKkC,SAArB,UACE,sBAAK7C,UAAU,aAAf,UACE,uBACEvC,KAAK,OACLuC,UAAW8F,KAAW,+BAAgC,CACpD,aAAcxH,EAAOkG,UAEvBrB,KAAK,UACLK,YAAY,uBACZJ,MAAOzC,KAAKpD,MAAMiH,QAClB5B,SAAUjC,KAAKiC,WAEhBtE,EAAOkG,SACN,qBAAKxE,UAAU,mBAAf,SAAmC1B,EAAOkG,aAG9C,qBAAKxE,UAAU,aAAf,SACE,0BACEA,UAAU,+BACVwD,YAAY,sBACZL,KAAK,qBACLC,MAAOzC,KAAKpD,MAAMkH,mBAClB7B,SAAUjC,KAAKiC,aAGnB,0CACA,qBAAK5C,UAAU,aAAf,SACE,uBACEvC,KAAK,OACLuC,UAAU,+BACVmD,KAAK,UACLC,MAAOzC,KAAKpD,MAAMoI,QAClB/C,SAAUjC,KAAKiC,aAGnB,qBAAK5C,UAAU,aAAf,SACE,yBACEA,UAAU,+BACVmD,KAAK,WACLC,MAAOzC,KAAKpD,MAAMgH,SAClB3B,SAAUjC,KAAKiC,SAJjB,UAME,wBAAQQ,MAAO,EAAf,6BACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,sBAIJ,qBAAKpD,UAAU,aAAf,SACE,yBACEA,UAAU,+BACVmD,KAAK,SACLC,MAAOzC,KAAKpD,MAAMuH,OAClBlC,SAAUjC,KAAKiC,SAJjB,UAME,wBAAQQ,MAAM,GAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,uBAIJ,uBACE3F,KAAK,SACLuC,UAAU,mD,GA1KImB,IAAMC,WA0LvBC,gBALS,SAAC9D,GAAD,MAAiB,CACvCF,YAAaE,EAAMiB,QAAQnB,YAC3BiB,OAAQf,EAAMe,UAGwB,CAAE0H,eJnJZ,SAC5B3B,EACAK,EACAxE,GAH4B,8CAIzB,WAAOC,GAAP,eAAAC,EAAA,+EAEoBX,IAAMiC,IAAN,uBAA0B2C,EAA1B,YAAwCK,IAF5D,OAEKyB,EAFL,OAIDhG,EAAS,CACP1C,KAAMT,EACNU,QAASyI,EAAO3F,OANjB,gDASDN,EAAQI,KAAR,cACAH,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAAM6C,SAASC,OAZzB,yDAJyB,uDImJ4B0F,kBJ9HzB,SAC/B7B,EACAK,EACAuB,EACA/F,GAJ+B,8CAK5B,WAAOC,GAAP,SAAAC,EAAA,+EAEKX,IAAM2G,MAAN,uBACY/B,EADZ,YAC0BK,GAC9BuB,GAJD,OAMD/F,EAAQI,KAAR,wBAA8B+D,IAC9BlE,EAAS,CACP1C,KAAMd,EACNe,QAAS,KATV,gDAYDyC,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAAM6C,SAASC,OAdzB,yDAL4B,wDI8HlBa,CACb0E,ICrMIM,G,kLAEE1F,KAAKC,MAAMnC,SAASN,YACtBwC,KAAKC,MAAMV,QAAQI,KAAK,gB,+BAK1B,OACE,qBAAKN,UAAU,UAAf,SACE,qBAAKA,UAAU,wCAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,iBAAd,kCACA,mBAAGA,UAAU,OAAb,2EAGA,uBACA,cAAC,IAAD,CAAMA,UAAU,8BAA8BD,GAAG,YAAjD,qBAGA,cAAC,IAAD,CAAMC,UAAU,gCAAgCD,GAAG,SAAnD,kC,GAtBMoB,IAAMC,WAsCbC,gBAJS,SAAC9D,GAAD,MAAiB,CACvCkB,SAAUlB,EAAMkB,YAGsB,KAAzB4C,CAA+BgF,IC7BxCC,G,kDACJ,WAAY1F,GAAa,IAAD,8BACtB,cAAMA,IAEDrD,MAAQ,CACXgJ,SAAU,GACVpE,SAAU,GACVqE,SAAU,GACVC,gBAAiB,GACjBnI,OAAQ,IAEV,EAAKsE,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAK2B,SAAW,EAAKA,SAAS3B,KAAd,gBAXM,E,gEAelBP,KAAKC,MAAMnC,SAASN,YACtBwC,KAAKC,MAAMV,QAAQI,KAAK,gB,gDAIKwC,GAC3BA,EAAUxE,QACZqC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,IAA+Be,OAAQwE,EAAUxE,Y,+BAKnD0E,GAEA,IAAMC,EAAMD,EAAEE,OAAOC,KACfC,EAAQJ,EAAEE,OAAOE,MAEvBzC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,mBAAgC0F,EAAMG,O,+BAGxBJ,GACdA,EAAEK,iBACF,IAAMqD,EAAU,CACdH,SAAU5F,KAAKpD,MAAMgJ,SACrBpE,SAAUxB,KAAKpD,MAAM4E,SACrBqE,SAAU7F,KAAKpD,MAAMiJ,SACrBC,gBAAiB9F,KAAKpD,MAAMkJ,iBAE9B9F,KAAKC,MAAM+F,cAAcD,EAAS/F,KAAKC,MAAMV,W,+BAGrC,IACA5B,EAAWqC,KAAKpD,MAAhBe,OACR,OACE,qBAAK0B,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,wBAAd,qBACA,mBAAGA,UAAU,mBAAb,iCACA,uBAAM6C,SAAUlC,KAAKkC,SAArB,UACE,sBAAK7C,UAAU,aAAf,UACE,uBACEvC,KAAK,OACLuC,UAAW8F,KAAW,+BAAgC,CACpD,aAAcxH,EAAO6D,WAEvBqB,YAAY,YACZL,KAAK,WACLC,MAAOzC,KAAKpD,MAAM4E,SAClBS,SAAUjC,KAAKiC,WAEhBtE,EAAO6D,UACN,sBAAKnC,UAAU,mBAAf,UAAmC1B,EAAO6D,SAA1C,UAGJ,sBAAKnC,UAAU,aAAf,UACE,uBACEvC,KAAK,OACLuC,UAAW8F,KAAW,+BAAgC,CACpD,aAAcxH,EAAOiI,WAEvB/C,YAAY,OACZL,KAAK,WACLC,MAAOzC,KAAKpD,MAAMgJ,SAClB3D,SAAUjC,KAAKiC,WAEhBtE,EAAOiI,UACN,sBAAKvG,UAAU,mBAAf,UAAmC1B,EAAOiI,SAA1C,UAIJ,sBAAKvG,UAAU,aAAf,UACE,uBACEvC,KAAK,WACLuC,UAAW8F,KAAW,+BAAgC,CACpD,aAAcxH,EAAOkI,WAEvBhD,YAAY,WACZL,KAAK,WACLC,MAAOzC,KAAKpD,MAAMiJ,SAClB5D,SAAUjC,KAAKiC,WAEhBtE,EAAOkI,UACN,sBAAKxG,UAAU,mBAAf,UAAmC1B,EAAOkI,SAA1C,UAGJ,sBAAKxG,UAAU,aAAf,UACE,uBACEvC,KAAK,WACLuC,UAAW8F,KAAW,+BAAgC,CACpD,aAAcxH,EAAOmI,kBAEvBjD,YAAY,mBACZL,KAAK,kBACLC,MAAOzC,KAAKpD,MAAMkJ,gBAClB7D,SAAUjC,KAAKiC,WAEhBtE,EAAOmI,iBACN,qBAAKzG,UAAU,mBAAf,SACG1B,EAAOmI,qBAId,uBAAOhJ,KAAK,SAASuC,UAAU,gD,GAxHxBmB,IAAMC,WAsIdC,gBALS,SAAC9D,GAAD,MAAiB,CACvCe,OAAQf,EAAMe,OACdG,SAAUlB,EAAMkB,YAGsB,CAAEkI,cV7IxC,SAACD,EAAcxG,GAAf,8CAAqC,WAAOC,GAAP,SAAAC,EAAA,+EAE3BX,IAAMY,KAAK,sBAAuBqG,GAFP,OAGjCxG,EAAQI,KAAK,UACbH,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KANsB,gDASjCyC,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAAI6C,SAASC,OAXS,yDAArC,wDU6Iaa,CAA4CiF,ICvIrDM,G,kDACJ,WAAYhG,GAAa,IAAD,8BACtB,cAAMA,IACDrD,MAAQ,CACXgJ,SAAU,GACVC,SAAU,GACVlI,OAAQ,GACRG,SAAU,IAEZ,EAAKmE,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAK2B,SAAW,EAAKA,SAAS3B,KAAd,gBATM,E,gEAalBP,KAAKC,MAAMnC,SAASN,YACtBwC,KAAKC,MAAMV,QAAQI,KAAK,gB,gDAIKwC,GAC/B,GAAIA,EAAUxE,OAAQ,CACpB,IAAM8E,EAAQN,EAAUxE,OACxBqC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,IAA+Be,OAAQ8E,KAGrCN,EAAUrE,SAASN,YACrBwC,KAAKC,MAAMV,QAAQI,KAAK,gB,+BAInB0C,GACPA,EAAEK,iBACF,IAAMwD,EAAe,CACnBN,SAAU5F,KAAKpD,MAAMgJ,SACrBC,SAAU7F,KAAKpD,MAAMiJ,UAGvB7F,KAAKC,MAAMkG,MAAMD,K,+BAIjB7D,GAEA,IAAMC,EAAMD,EAAEE,OAAOC,KACfC,EAAQJ,EAAEE,OAAOE,MAEvBzC,KAAKoC,SAAL,2BAAmBpC,KAAKpD,OAAxB,mBAAgC0F,EAAMG,O,+BAG9B,IACA9E,EAAWqC,KAAKpD,MAAhBe,OAER,OACE,qBAAK0B,UAAU,QAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,uBAAM6C,SAAUlC,KAAKkC,SAArB,UACE,sBAAK7C,UAAU,aAAf,UACE,uBACEvC,KAAK,OACLuC,UAAW8F,KAAW,+BAAgC,CACpD,aAAcxH,EAAOiI,WAEvB/C,YAAY,gBACZL,KAAK,WACLC,MAAOzC,KAAKpD,MAAMgJ,SAClB3D,SAAUjC,KAAKiC,WAEhBtE,EAAOiI,UACN,sBAAKvG,UAAU,mBAAf,cAAoC1B,EAAOiI,SAA3C,UAGJ,sBAAKvG,UAAU,aAAf,UACE,uBACEvC,KAAK,WACLuC,UAAW8F,KAAW,+BAAgC,CACpD,aAAcxH,EAAOkI,WAEvBhD,YAAY,WACZL,KAAK,WACLC,MAAOzC,KAAKpD,MAAMiJ,SAClB5D,SAAUjC,KAAKiC,WAEhBtE,EAAOkI,UACN,sBAAKxG,UAAU,mBAAf,cAAoC1B,EAAOkI,SAA3C,UAGJ,uBAAO/I,KAAK,SAASuC,UAAU,gD,GAzF3BmB,IAAMC,WAwGXC,gBALS,SAAC9D,GAAD,MAAiB,CACvCkB,SAAUlB,EAAMkB,SAChBH,OAAQf,EAAMe,UAGwB,CAAEwI,MX9FrB,SAACD,GAAD,8CAAuB,WAAO1G,GAAP,mBAAAC,EAAA,+EAGjBX,IAAMY,KAAK,kBAAmBwG,GAHb,OAGlC7C,EAHkC,OAKhCxE,EAAUwE,EAAIxD,KAAdhB,MAER+C,aAAawE,QAAQ,WAAYvH,GAEjCD,EAASC,GAEHwH,EAAkBC,YAAWzH,GAEnCW,EAAS,CACP1C,KAAMP,EACNQ,QAASsJ,IAf6B,kDAkBxC7G,EAAS,CACP1C,KAAMf,EACNgB,QAAS,KAAM6C,SAASC,OApBc,0DAAvB,wDW8FNa,CAAoCuF,IC/F7CM,GAAc3E,aAAa4E,SAEjC,GAAID,GAAK,CACP3H,EAAS2H,IACT,IAAME,GAAqBH,YAAWC,IACtCnI,EAAMoB,SAAS,CACb1C,KAAMP,EACNQ,QAAS0J,KAGX,IAAMC,GAAcC,KAAKC,MAAQ,IAC7BH,GAAcI,IAAMH,KACtB9E,aAAaC,WAAW,YACxBjD,GAAS,GACTR,EAAMoB,SAAS,CACb1C,KAAMP,EACNQ,QAAS,KAEXmB,OAAOkD,SAASC,KAAO,K,IAoDZyF,G,uKA7CX,OACE,cAAC,IAAD,CAAU1I,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,sBAAKiB,UAAU,MAAf,UACE,cAAC,GAAD,IAKA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0H,OAAK,EAACC,KAAK,IAAIC,UAAWvB,KACjC,cAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,SAASC,UAAWhB,KACtC,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,YAAYC,UAAWtB,KAMzC,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,aAAaC,UAAWrG,IAC1C,cAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,cAAcC,UAAWnF,KAC3C,cAAC,IAAD,CACEiF,OAAK,EACLC,KAAK,qBACLC,UAAWnE,KAEb,cAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,oBAAoBC,UAAW3C,KACjD,cAAC,IAAD,CACEyC,OAAK,EACLC,KAAK,sBACLC,UAAWlC,KAEb,cAAC,IAAD,CACEgC,OAAK,EACLC,KAAK,wCACLC,UAAW7B,KAEb,cAAC,IAAD,CAAO6B,UAAWvB,mB,GAvCdjF,aC7BHyG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.ab8d6d40.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const RESET_ERRORS = \"RESET_ERRORS\";\n\nexport const GET_ALLPROJECTS = \"GET_ALLPROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { AnyAction } from \"redux\";\nimport {\n  GET_PROJECT_TASK,\n  GET_BACKLOG,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\nimport ProjectTask from \"../model/ProjectTask\";\n\nconst initialState = {\n  projectTasks: [],\n  projectTask: {},\n};\n\nconst backlogReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        projectTasks: action.payload,\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        projectTask: action.payload,\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        projectTasks: state.projectTasks.filter(\n          (projectTask: ProjectTask) =>\n            projectTask.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default backlogReducer;\n","import { AnyAction } from \"redux\";\nimport { GET_ERRORS, RESET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nconst errorReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    case RESET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","import { AnyAction } from \"redux\";\nimport { DELETE_PROJECT, GET_ALLPROJECTS, GET_PROJECT } from \"../actions/types\";\nimport { Project } from \"../model/Project\";\n\ninterface ProjectState {\n  projectList: Project[];\n  project: Project | {};\n}\n\nconst initialState: ProjectState = {\n  projectList: [],\n  project: {},\n};\n\nconst projectReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case GET_PROJECT:\n      return { ...state, project: action.payload };\n    case GET_ALLPROJECTS:\n      //   console.log(\"Project reducer worked\");\n      return { ...state, projectList: action.payload };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projectList: state.projectList.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import { AnyAction } from \"redux\";\nimport { SET_CURRENT_USER } from \"../actions/types\";\n\ninterface SecurityState {\n  user: {};\n  validToken: boolean;\n}\n\nconst initialState: SecurityState = {\n  user: {},\n  validToken: false,\n};\n\nconst securityReducer = (\n  state: SecurityState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: true,\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default securityReducer;\n","import { combineReducers } from \"redux\";\nimport backlogReducer from \"./backlogReducer\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  projects: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose, Store } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store: Store;\n\nconst ReactReduxDevTools = (window as any).__REDUX_DEVTOOLS_EXTENSION__\n  ? (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n  : () => {};\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  //   store = createStore(\n  //     rootReducer,\n  //     initialState,\n  //     compose(applyMiddleware(...middleware))\n  //   );\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n}\n\nexport default store;\n","import axios from \"axios\";\n\nconst setToken = (token: string | boolean) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setToken;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_ALLPROJECTS,\n  GET_PROJECT,\n  DELETE_PROJECT,\n} from \"./types\";\nimport { Project } from \"../model/Project\";\n// import { AnyAction } from \"redux\";\n\nexport const createProject =\n  (project: Project, history: string[]) =>\n  async (\n    // what is the dispatch here is an function argument, like resolve\n    dispatch: any\n  ) => {\n    try {\n      await axios.post(\"/api/project\", project);\n\n      history.push(\"/dashboard\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: {},\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    }\n  };\n\nexport const getProjects = (history: string[]) => async (dispatch: any) => {\n  try {\n    // console.log(\"get projects action dispatched!\");\n    const projects: any = await axios.get(\"/api/project/all\");\n    dispatch({\n      type: GET_ALLPROJECTS,\n      payload: projects.data,\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n    history.push(\"/dashboard\");\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getProjectById =\n  (id: string, history: string[]) => async (dispatch: any) => {\n    try {\n      // console.log(\"get projects action dispatched!\");\n      const res: any = await axios.get(`/api/project/${id}`);\n      dispatch({\n        type: GET_PROJECT,\n        payload: res.data,\n      });\n    } catch (err) {\n      history.push(\"/dashboard\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    }\n  };\n\nexport const deleteProject = (id: string) => async (dispatch: any) => {\n  await axios.delete(`/api/project/${id}`);\n  dispatch({\n    type: DELETE_PROJECT,\n    payload: id,\n  });\n};\n","import React from \"react\";\nimport { Project } from \"../../model/Project\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\ninterface Props {\n  project: Project;\n  deleteProject: any;\n}\n\nclass ProjectItem extends React.Component<Props, any> {\n  onDeleteClick(id: string) {\n    this.props.deleteProject(id);\n  }\n  render() {\n    const project: Project = this.props.project; // declare a const value from the props, used in the JSX\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport { getProjects } from \"../actions/projectActions\";\nimport { connect } from \"react-redux\";\nimport { Project } from \"../model/Project\";\n\nclass Dashborad extends React.Component<any, any> {\n  componentWillMount() {\n    // console.log(\"Dashboard willl Mount!\");\n    // this.props.getProjects(this.props.history);\n  }\n  componentDidMount() {\n    // console.log(\"Dashboard Did Mount!\");\n    this.props.getProjects(this.props.history);\n  }\n\n  render() {\n    // console.log(\"DashBoard render here!\");\n    const projects = this.props.projects.projectList;\n    // console.log(`The projects is ${projects}`);\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map((project: Project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  projects: state.projects,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashborad);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../actions/securityActions\";\n\ninterface IMyState {\n  security: object;\n}\n\nclass Header extends React.Component<any, IMyState> {\n  constructor(props: any) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n    this.state = {\n      security: {},\n    };\n  }\n\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout}>\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks: any;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setToken from \"../securityUtils/setToken\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\n\nexport const createNewUser =\n  (newUser: any, history: string[]) => async (dispatch: any) => {\n    try {\n      await axios.post(\"/api/users/register\", newUser);\n      history.push(\"/login\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: {},\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    }\n  };\n\nexport const login = (LoginRequest: any) => async (dispatch: any) => {\n  try {\n    // post => login request\n    const res: any = await axios.post(\"api/users/login\", LoginRequest);\n    // store token in localStorage\n    const { token } = res.data;\n\n    localStorage.setItem(\"jwtToken\", token);\n    // append the token into each request it sends\n    setToken(token);\n    // decode the token in React\n    const decoded: object = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch: any) => {\n  localStorage.removeItem(\"jwtToken\");\n  setToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { ChangeEvent, FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport { Project } from \"../../model/Project\";\nimport classnames from \"classnames\";\n\ninterface IMyComponentState {\n  projectName: string;\n  projectIdentifier: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  errors: any;\n}\n\nclass AddProject extends React.Component<any, IMyComponentState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // life cycle\n  componentWillReceiveProps(nextProps: any) {\n    if (nextProps.errors) {\n      this.setState({ ...this.state, errors: nextProps.errors });\n    }\n  }\n\n  onChange(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void {\n    const key = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ ...this.state, [key]: value });\n  }\n\n  onSubmit(e: FormEvent<HTMLFormElement>): void {\n    e.preventDefault();\n\n    const newProject: Project = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// AddProject.propTypes = {\n//   createProject: PropTypes.func.isRequired,\n//   errors: PropTypes.object.isRequired,\n// };\n\nconst mapStateToProps = (state: any) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import React, { ChangeEvent, FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProjectById, createProject } from \"../../actions/projectActions\";\nimport { Project } from \"../../model/Project\";\nimport classnames from \"classnames\";\n\ninterface State extends Project {\n  errors: Error;\n}\n\ninterface Error {\n  projectName?: string;\n  projectIdentifier?: string;\n  description?: string;\n}\n\nclass UpdateProject extends React.Component<any, State> {\n  //set state\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      id: undefined,\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    if (nextProps.errors) {\n      this.setState({ ...this.state, errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getProjectById(id, this.props.history);\n    //   .then(() => this.setState(this.props.project));\n  }\n\n  onChange(\n    e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>\n  ): void {\n    const key = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ ...this.state, [key]: value });\n  }\n\n  onSubmit(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    // console.log(updateProject);\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    value={this.state.projectIdentifier}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  // state here is the redux state!\n  project: state.projects.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectById, createProject })(\n  UpdateProject\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ProjectTask from \"../../../model/ProjectTask\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\n\ninterface IMyComponentProps {\n  projectTask: ProjectTask;\n  deleteProjectTask: any;\n}\n\nclass ProjectTaskItem extends React.Component<IMyComponentProps, any> {\n  constructor(props: IMyComponentProps) {\n    super(props);\n\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  onDeleteClick(e: any) {\n    this.props.deleteProjectTask(\n      this.props.projectTask.projectIdentifier,\n      this.props.projectTask.projectSequence\n    );\n  }\n\n  render() {\n    const { projectTask } = this.props;\n    const backlog_id: string = this.props.projectTask.projectIdentifier;\n    const PT_sequence: string | undefined = this.props.projectTask\n      .projectSequence;\n\n    let priorityString;\n    let priorityClass;\n\n    if (projectTask.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (projectTask.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n    if (projectTask.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {projectTask.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\"> {projectTask.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {projectTask.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${backlog_id}/${PT_sequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick}>\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { deleteProjectTask })(ProjectTaskItem);\n","import axios from \"axios\";\nimport ProjectTask from \"../model/ProjectTask\";\nimport {\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n  GET_BACKLOG,\n  GET_ERRORS,\n  RESET_ERRORS,\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id: string,\n  projectTask: ProjectTask,\n  history: string[]\n) => async (dispatch: any) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, projectTask);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: RESET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (backlog_id: string, history: string[]) => async (\n  dispatch: any\n) => {\n  try {\n    const results: any = await axios.get(`/api/backlog/${backlog_id}`);\n\n    dispatch({\n      type: GET_BACKLOG,\n      payload: results.data,\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n    // history.push(\"/dashboard\");\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id: string,\n  PT_SQ: string,\n  history: string[]\n) => async (dispatch: any) => {\n  try {\n    const result = await axios.get(`/api/backlog/${backlog_id}/${PT_SQ}`);\n\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: result.data,\n    });\n  } catch (error) {\n    history.push(`/dashboard`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id: string,\n  PT_SQ: string,\n  updatedProjectTask: ProjectTask,\n  history: string[]\n) => async (dispatch: any) => {\n  try {\n    await axios.patch(\n      `/api/backlog/${backlog_id}/${PT_SQ}`,\n      updatedProjectTask\n    );\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: RESET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id: string, PT_SQ: string) => async (\n  dispatch: any\n) => {\n  if (window.confirm(`You are deleting project task ${PT_SQ} ?`)) {\n    await axios.delete(`/api/backlog/${backlog_id}/${PT_SQ}`);\n\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: PT_SQ,\n    });\n  }\n};\n","import React from \"react\";\nimport ProjectTask from \"../../model/ProjectTask\";\nimport ProjectTaskItem from \"./ProjectTasks/ProjectTaskItem\";\n\n// interface IMyComponentProps {\n//   backlog_id: string;\n//   getBacklog: any;\n// }\n\nclass Backlog extends React.Component<any, any> {\n  render() {\n    const { projectTasks } = this.props;\n    // console.log(projectTasks);\n\n    const todoTasks = projectTasks.filter(\n      (projectTask: ProjectTask) => projectTask.status === \"TO_DO\"\n    );\n    const inprogressTasks = projectTasks.filter(\n      (projectTask: ProjectTask) => projectTask.status === \"IN_PROGRESS\"\n    );\n    const finishedTasks = projectTasks.filter(\n      (projectTask: ProjectTask) => projectTask.status === \"DONE\"\n    );\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n\n            {/* <!-- SAMPLE PROJECT TASK STARTS HERE --> */}\n            {todoTasks.map((projectTask: ProjectTask) => (\n              <ProjectTaskItem\n                key={projectTask.projectSequence}\n                projectTask={projectTask}\n              />\n            ))}\n            {/* <!-- SAMPLE PROJECT TASK ENDS HERE --> */}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n\n            {/* <!-- SAMPLE PROJECT TASK STARTS HERE --> */}\n            {inprogressTasks.map((projectTask: ProjectTask) => (\n              <ProjectTaskItem\n                key={projectTask.projectSequence}\n                projectTask={projectTask}\n              />\n            ))}\n            {/* <!-- SAMPLE PROJECT TASK ENDS HERE --> */}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n\n            {/* <!-- SAMPLE PROJECT TASK STARTS HERE --> */}\n            {finishedTasks.map((projectTask: ProjectTask) => (\n              <ProjectTaskItem\n                key={projectTask.projectSequence}\n                projectTask={projectTask}\n              />\n            ))}\n            {/* <!-- SAMPLE PROJECT TASK ENDS HERE --> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { getBacklog } from \"../../actions/backlogActions\";\nimport { connect } from \"react-redux\";\nimport ProjectTask from \"../../model/ProjectTask\";\n\nclass ProjectBoard extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      errors: {},\n    };\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params; // there are some problems here\n    this.props.getBacklog(id, this.props.history);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: any) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const projectTasks = this.props.backlog.projectTasks;\n    const { errors } = this.state;\n\n    let BoardContent: any;\n\n    const boardAlgorithm = (errors: any, project_tasks: ProjectTask[]) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog projectTasks={projectTasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, projectTasks);\n    return (\n      <div>\n        <div className=\"container\">\n          <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n          </Link>\n          <br />\n          <hr />\n          {BoardContent}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { ChangeEvent, FormEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport ProjectTask from \"../../../model/ProjectTask\";\nimport classNames from \"classnames\";\n\ninterface IMyState extends ProjectTask {\n  errors: any;\n}\n\nclass AddProjectTask extends React.Component<any, IMyState> {\n  constructor(props: any) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      status: \"\",\n      acceptanceCriteria: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  // on change\n  onChange(\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\n  ) {\n    const key: string = e.target.name;\n    const value: string = e.target.value;\n\n    this.setState({ ...this.state, [key]: value }); // why [] is needed\n  }\n\n  // on submit\n  onSubmit(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    // console.log(\"onsubmit fired\");\n\n    const newProjectTask: ProjectTask = {\n      summary: this.state.summary,\n      status: this.state.status,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n    };\n\n    // console.log(newProjectTask);\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import classNames from \"classnames\";\nimport React, { ChangeEvent, FormEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ProjectTask from \"../../../model/ProjectTask\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\n\ninterface IMyComponentState extends ProjectTask {\n  errors: any;\n}\n\nclass UpdateProjectTask extends React.Component<any, IMyComponentState> {\n  constructor(props: any) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n\n    this.state = {\n      id: undefined,\n      summary: \"\",\n      status: \"\",\n      acceptanceCriteria: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      projectSequence: \"\",\n      errors: {},\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: any) {\n    if (nextProps.errors) {\n      this.setState({ ...this.state, errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      summary,\n      status,\n      acceptanceCriteria,\n      priority,\n      dueDate,\n      projectIdentifier,\n      projectSequence,\n    } = nextProps.projectTask;\n\n    this.setState({\n      id,\n      summary,\n      status,\n      acceptanceCriteria,\n      priority,\n      dueDate,\n      projectIdentifier,\n      projectSequence,\n    });\n  }\n\n  componentDidMount() {\n    const { backlog_id, PT_SQ } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, PT_SQ, this.props.history);\n  }\n\n  public onSubmit(e: FormEvent) {\n    e.preventDefault();\n\n    const updatedProjectTask: ProjectTask = {\n      id: this.state.id,\n      summary: this.state.summary,\n      status: this.state.status,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      projectSequence: this.state.projectSequence,\n    };\n\n    // console.log(updatedProjectTask);\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updatedProjectTask,\n      this.props.history\n    );\n  }\n\n  public onChange(\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\n  ) {\n    const key: string = e.target.name;\n    const value: string = e.target.value;\n\n    this.setState({ ...this.state, [key]: value }); // why [] is needed\n  }\n\n  render() {\n    const { backlog_id } = this.props.match.params;\n    const errors = this.state.errors;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${backlog_id}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">\n                Project ID:{this.state.projectIdentifier} | ProjectTask ID:\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  projectTask: state.backlog.projectTask,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends React.Component<any, any> {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, null)(Landing);\n","import classNames from \"classnames\";\nimport React, { ChangeEvent, FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createNewUser } from \"../../actions/securityActions\";\n\ninterface IMyComponentState {\n  username: string;\n  fullName: string;\n  password: string;\n  confirmPassword: string;\n  errors: any;\n}\n\nclass Register extends React.Component<any, IMyComponentState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: any) {\n    if (nextProps.errors) {\n      this.setState({ ...this.state, errors: nextProps.errors });\n    }\n  }\n\n  public onChange(\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void {\n    const key = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ ...this.state, [key]: value });\n  }\n\n  public onSubmit(e: FormEvent) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName} </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Name\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username} </div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password} </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state: any) => ({\n  errors: state.errors,\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import classNames from \"classnames\";\nimport React, { ChangeEvent, FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/securityActions\";\n\ninterface IMyComponentState {\n  username: string;\n  password: string;\n  errors: any;\n  security: object;\n}\n\nclass Login extends React.Component<any, IMyComponentState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n      security: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: any) {\n    if (nextProps.errors) {\n      const value = nextProps.errors;\n      this.setState({ ...this.state, errors: value });\n    }\n\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  onSubmit(e: FormEvent) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  public onChange(\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void {\n    const key = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ ...this.state, [key]: value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\"> {errors.username} </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\"> {errors.password} </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setToken from \"./securityUtils/setToken\";\n\nimport Dashborad from \"./components/Dashborad\";\nimport Header from \"./components/Layout/Header\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\n\nconst JWT: string = localStorage.jwtToken;\n\nif (JWT) {\n  setToken(JWT);\n  const decoded_Token: any = jwt_decode(JWT);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_Token,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_Token.exp < currentTime) {\n    localStorage.removeItem(\"jwtToken\");\n    setToken(false);\n    store.dispatch({\n      type: SET_CURRENT_USER,\n      payload: {},\n    });\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    // need to wrap the whole project up with <Router> tag\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n\n            {\n              // public routes\n            }\n            <Switch>\n              <Route exact path=\"/\" component={Landing} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n\n              {\n                // private routes\n              }\n\n              <Route exact path=\"/dashboard\" component={Dashborad} />\n              <Route exact path=\"/addProject\" component={AddProject} />\n              <Route\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <Route exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n              <Route\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <Route\n                exact\n                path=\"/updateProjectTask/:backlog_id/:PT_SQ\"\n                component={UpdateProjectTask}\n              />\n              <Route component={Landing} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}